'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var glob = _interopDefault(require('glob'));
var HtmlWebpackPlugin = _interopDefault(require('html-webpack-plugin'));

var index = (function () {
  var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

  var _ref$base = _ref.base;
  var base = _ref$base === undefined ? './src' : _ref$base;
  var _ref$custom = _ref.custom;
  var custom = _ref$custom === undefined ? [] : _ref$custom;


  var files = glob.sync(base + '/**/*.html');

  var entry = [].concat(files);

  //exclude custom with no filename or template path
  custom = custom.filter(function (c) {
    return c && c.filename && c.template;
  });

  //filter all files with a custom plugin (custom)
  files = files.filter(function (f) {
    return !custom.find(function (c) {
      return c.template === f;
    });
  });

  //map all custom objects to plugins
  custom = custom.map(function (p) {
    return new HtmlWebpackPlugin(p);
  });

  //map all found & filtered html files to plugins
  var plugins = files.map(function (template) {
    return new HtmlWebpackPlugin({
      template: template,
      filename: template.split(base + '/').join('')
    });
  });

  return { entry: entry, plugins: [].concat(plugins, custom) };
});

module.exports = index;
